<?php

/**
 * @file
 * Contains Drupal\koba_booking\koba_booking.module
 */

/**
 * @defgroup koba_booking
 * @{
 * Implement a Content entity.
 *
 * }
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\file\Entity\File;
use Drupal\Core\Config;
use Drupal\Core\Entity\EntityManagerInterface;
use Drupal\Core\StringTranslation\TranslationInterface;


/**
 * Implements hook_theme().
 */
function koba_booking_theme() {
  return array(
    'booking_calendar_page' => array(
      'variables' => array(),
      'file' => 'koba_booking.pages.inc',
    ),
    'booking_receipt' => array(
      'variables' => array(),
      'file' => 'koba_booking.pages.inc',
    ),
    'booking_add_booking' => array(
      'render element' => 'form',
    ),
  );
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function koba_booking_form_koba_booking_booking_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Switch between add or edit action.
  if ($form['#action'] == '/booking/add') {

    // Fetch module config settings.
    $config = \Drupal::config('koba_booking.settings');


    // Fetch header top file.
    $top_image_id = $config->get('koba_booking.create_booking_top_image');
    $file = ($top_image_id) ? File::load($top_image_id) : FALSE;

    // @todo caching af image.
    // Set variables
    $form['variables']['title'] = $config->get('koba_booking.create_booking_title');
    $form['variables']['top_img'] = ($file) ? $file->url() : '';
    $form['variables']['manchet'] = $config->get('koba_booking.create_booking_description');

    // Change field descriptions.
    $form['booking_email']['widget']['0']['value']['#description'] = '<div class="booking--description-link" data-ng-click="showEmailDescription = !showEmailDescription">' . t('Why do we need your email?') . '</div>';
    $form['name']['widget']['0']['value']['#description'] = '<div class="booking--description-link" data-ng-click="showTitleDescription = !showTitleDescription">' . t('Why do we need a title?') . '</div>';

    // Filter help texts if they have a filter.
    $email_help_text = is_array($config->get('koba_booking.why_email')) ? $config->get('koba_booking.why_email')['value'] : $config->get('koba_booking.why_email');
    $title_help_text = is_array($config->get('koba_booking.why_title')) ? $config->get('koba_booking.why_title')['value'] : $config->get('koba_booking.title');
    $email_help_text_format = is_array($config->get('koba_booking.why_email')) ? $config->get('koba_booking.why_email')['format'] : FALSE;
    $title_help_text_format = is_array($config->get('koba_booking.why_title')) ? $config->get('koba_booking.why_title')['format'] : FALSE;
    $form['variables']['why_email'] = ($email_help_text_format) ? check_markup($email_help_text, $email_help_text_format) : '';
    $form['variables']['why_title'] = ($title_help_text_format) ? check_markup($title_help_text, $title_help_text_format) : '';

    // Help texts are reused as headers.
    $form['variables']['why_email_header'] = t('Why do we need your email?');
    $form['variables']['why_title_header'] = t('Why do we need a title?');

    // Add template as prefix.
    $form['#theme'] = array('booking_add_booking');
  }
}
